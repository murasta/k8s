$ docker image build -t my-nginx -f nginx/Dockerfile nginx/
[+] Building 2.0s (12/12) FINISHED                                                                                       
 => [internal] load build definition from Dockerfile                                                                0.0s
 => => transferring dockerfile: 316B                                                                                0.0s
 => [internal] load .dockerignore                                                                                   0.0s
 => => transferring context: 2B                                                                                     0.0s
 => [internal] load metadata for docker.io/library/alpine:latest                                                    1.9s
 => [auth] library/alpine:pull token for registry-1.docker.io                                                       0.0s
 => [1/6] FROM docker.io/library/alpine:latest@sha256:02bb6f428431fbc2809c5d1b41eab5a68350194fb508869a33cb1af4444c  0.0s
 => [internal] load build context                                                                                   0.1s
 => => transferring context: 123B                                                                                   0.1s
 => CACHED [2/6] RUN apk add --update nginx &&     rm -rf /var/cache/apk/* &&     mkdir -p /tmp/nginx               0.0s
 => CACHED [3/6] COPY nginx.conf /etc/nginx/nginx.conf                                                              0.0s
 => CACHED [4/6] COPY default.conf /etc/nginx/conf.d/default.conf                                                   0.0s
 => CACHED [5/6] WORKDIR /usr/html                                                                                  0.0s
 => CACHED [6/6] COPY . ./                                                                                          0.0s
 => exporting to image                                                                                              0.0s
 => => exporting layers                                                                                             0.0s
 => => writing image sha256:35c9c5d0296caec1d68410b869ca9ab356f3309733195619bf6a6da00404689d                        0.0s
 => => naming to docker.io/library/my-nginx                                                                         0.0s
$ docker container run --name my-nginx my-nginx
^C%                                                                                                                      
$ docker container rm my-nginx                
my-nginx
$ touch nginx/password
$ docker image build -t my-nginx -f nginx/Dockerfile nginx/
[+] Building 0.8s (11/11) FINISHED                                                                                       
 => [internal] load build definition from Dockerfile                                                                0.0s
 => => transferring dockerfile: 316B                                                                                0.0s
 => [internal] load .dockerignore                                                                                   0.0s
 => => transferring context: 2B                                                                                     0.0s
 => [internal] load metadata for docker.io/library/alpine:latest                                                    0.7s
 => [1/6] FROM docker.io/library/alpine:latest@sha256:02bb6f428431fbc2809c5d1b41eab5a68350194fb508869a33cb1af4444c  0.0s
 => [internal] load build context                                                                                   0.0s
 => => transferring context: 152B                                                                                   0.0s
 => CACHED [2/6] RUN apk add --update nginx &&     rm -rf /var/cache/apk/* &&     mkdir -p /tmp/nginx               0.0s
 => CACHED [3/6] COPY nginx.conf /etc/nginx/nginx.conf                                                              0.0s
 => CACHED [4/6] COPY default.conf /etc/nginx/conf.d/default.conf                                                   0.0s
 => CACHED [5/6] WORKDIR /usr/html                                                                                  0.0s
 => CACHED [6/6] COPY . ./                                                                                          0.0s
 => exporting to image                                                                                              0.0s
 => => exporting layers                                                                                             0.0s
 => => writing image sha256:c66ed7f63b9377e6317da8bf13254dbbf28cfd4beb0fc1b5406efbba431c19b7                        0.0s
 => => naming to docker.io/library/my-nginx                                                                         0.0s
$ docker container run --name my-nginx -d my-nginx         
e3b4d30f65576b5f21994313fcca6d42d511371d89c693f8815b6e0546bff399
$ docker container exec -ti my-nginx /bin/sh               
/usr/html # ls
Dockerfile    default.conf  index.html    nginx.conf    password
/usr/html # exit
$ cat << EOF > nginx/.dockerignore
Dockerfile
password
EOF
$ docker image build -t my-nginx:1 -f nginx/Dockerfile nginx/
[+] Building 0.7s (11/11) FINISHED                                                                                       
 => [internal] load build definition from Dockerfile                                                                0.0s
 => => transferring dockerfile: 316B                                                                                0.0s
 => [internal] load .dockerignore                                                                                   0.0s
 => => transferring context: 60B                                                                                    0.0s
 => [internal] load metadata for docker.io/library/alpine:latest                                                    0.6s
 => [internal] load build context                                                                                   0.0s
 => => transferring context: 151B                                                                                   0.0s
 => [1/6] FROM docker.io/library/alpine:latest@sha256:02bb6f428431fbc2809c5d1b41eab5a68350194fb508869a33cb1af4444c  0.0s
 => CACHED [2/6] RUN apk add --update nginx &&     rm -rf /var/cache/apk/* &&     mkdir -p /tmp/nginx               0.0s
 => CACHED [3/6] COPY nginx.conf /etc/nginx/nginx.conf                                                              0.0s
 => CACHED [4/6] COPY default.conf /etc/nginx/conf.d/default.conf                                                   0.0s
 => CACHED [5/6] WORKDIR /usr/html                                                                                  0.0s
 => CACHED [6/6] COPY . ./                                                                                          0.0s
 => exporting to image                                                                                              0.0s
 => => exporting layers                                                                                             0.0s
 => => writing image sha256:1bf3348527fe69349b2a97fab8ccd237daad6bc65327c503c7911c943cb39e87                        0.0s
 => => naming to docker.io/library/my-nginx:1                                                                       0.0s
$ docker container rm -f my-nginx
my-nginx
$ docker container run --name my-nginx -d my-nginx:1  
65350be07aeb13177f605c40c94a0bf8e7796d1f45a01605f8bfc6c75053fd7f
$ docker container exec -ti my-nginx /bin/sh          
/usr/html # ls
default.conf  index.html    nginx.conf
/usr/html # exit
$ docker container rm -f my-nginx
my-nginx
$ docker container run --name my-nginx -p 8080:80 -d my-nginx
b4d637f9763ab00708236111bcb869d6aebae273ed4bc07c4f67dc5e9a77293e
$ curl localhost:8080
<!DOCTYPE html>
<htmL>
    <body>
        Docker & K8S workshops!
    </body>
</htmL>%                                                                                                                 
$ docker image build -t my-nginx:2 -f nginx/Dockerfile nginx/
[+] Building 1.5s (12/12) FINISHED                                                                                       
 => [internal] load build definition from Dockerfile                                                                0.0s
 => => transferring dockerfile: 326B                                                                                0.0s
 => [internal] load .dockerignore                                                                                   0.0s
 => => transferring context: 60B                                                                                    0.0s
 => [internal] load metadata for docker.io/library/alpine:latest                                                    1.5s
 => [auth] library/alpine:pull token for registry-1.docker.io                                                       0.0s
 => [1/6] FROM docker.io/library/alpine:latest@sha256:02bb6f428431fbc2809c5d1b41eab5a68350194fb508869a33cb1af4444c  0.0s
 => [internal] load build context                                                                                   0.0s
 => => transferring context: 125B                                                                                   0.0s
 => CACHED [2/6] RUN apk add --update nginx &&     rm -rf /var/cache/apk/* &&     mkdir -p /tmp/nginx               0.0s
 => CACHED [3/6] COPY nginx.conf /etc/nginx/nginx.conf                                                              0.0s
 => CACHED [4/6] COPY default.conf /etc/nginx/conf.d/default.conf                                                   0.0s
 => CACHED [5/6] WORKDIR /usr/html                                                                                  0.0s
 => CACHED [6/6] COPY . ./                                                                                          0.0s
 => exporting to image                                                                                              0.0s
 => => exporting layers                                                                                             0.0s
 => => writing image sha256:b2939cdf6f947e0bb463cbc3b0e66556b090ce4c8681bf68d1e160eca74e4b1b                        0.0s
 => => naming to docker.io/library/my-nginx:2                                                                       0.0s
$ docker container ls
CONTAINER ID   IMAGE      COMMAND   CREATED              STATUS              PORTS                  NAMES
b4d637f9763a   my-nginx   "nginx"   About a minute ago   Up About a minute   0.0.0.0:8080->80/tcp   my-nginx
$ docker container rm -f b4d637f9763a
b4d637f9763a
$ docker container run --name my-nginx -P -d my-nginx:2
5fbf71e6bb0402e70b38c6927c3cb2cf396234bb52aaab201f0be41b4b6be8e0
$ docker container port my-nginx                       
80/tcp -> 0.0.0.0:32770
$ curl localhost:32770
<!DOCTYPE html>
<htmL>
    <body>
        Docker & K8S workshops!
    </body>
</htmL>%                                                                                                                 
$ docker rm -f $(docker ps -qa)
5fbf71e6bb04
$ docker ps -a 
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
$ 